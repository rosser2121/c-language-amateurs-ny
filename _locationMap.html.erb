<% if local_assigns.include? :locals and locals.include? :location %>
  
  <% location = locals[:location] %>

  <% if (!location.nil? and location.class == Location and !location.longitude.nil? and !location.latitude.nil?) %>

    <script type="text/javascript" src="https://maps.google.com/maps/api/js?sensor=false"></script>

    <div style="overflow:hidden;height:500px;width:100%;border-top: 10px solid #7f1a67">
      <div id="gmap_canvas" style="height:500px;width:100%;">
        <style>
          #gmap_canvas img{max-width:none!important;background:none!important}
        </style>
      </div>

      <table id = "infoCard">
        <tr>
          <td valign="top" width="150px"><strong><%= link_to @location.name, user_location_path(@location.user, @location),{:style=>'color:#7f1a67;text-decoration:none;'}%></strong><br><%= location.address1 %><br><%= location.address2 %><br></td>
          <td width="150px"><img style='width:100%' src='<%= @photos.first.image.url(:large) %>'></td>
        </tr>
      </table>
         

      <script type="text/javascript">
      // I set the info window's inner HTML as a table, looks good on device inspector in Chrome, but
      // am also thinking there could be a better option
      var infoCard = $("#infoCard"); 
      infoCard.hide();
      // JSON Gmaps style data - 
        
        var styles = [{
              "stylers": [{
                  "hue": "#7D3476"
              }, {
                  "lightness": 6
              }]
          }, {
              "featureType": "landscape.man_made",
              "stylers": [{
                  "visibility": "on"
              }]
          }, {
              "featureType": "poi",
              "stylers": [{
                  "visibility": "off"
              }]
          }, {
              "featureType": "transit.line",
              "stylers": [{
                  "visibility": "off"
              }]
          }, {
              "featureType": "transit.station.rail",
              "elementType": "labels.icon",
              "stylers": [{
                  "visibility": "on"
              }]
          }, {
              "featureType": "transit.station.rail",
              "elementType": "labels.text",
              "stylers": [{
                  "visibility": "off"
              }]
          }]

        // Marker symbol - SVG data for stroked circle to 
        // replace generic thumbtack-ish icon from vanilla Google maps

        var locSymbol = {
          path: 'M 0 0 m -75 0 a 75 75 0 1 0 150 0 a 75 75 0 1 0 -150 0',
          fillColor: 'purple',
          fillOpacity: 1,
          scale: 0.15,
          strokeColor: 'white',
          strokeWeight: 3
        };

        // exisitng init map function with style and map marker variables passed in 

        function init_map(){
          var myOptions = {
            zoom:14,
            scrollwheel: false,
            center:new google.maps.LatLng(<%= location.latitude %>,<%= location.longitude %>),
            mapTypeId: google.maps.MapTypeId.ROADMAP
          };

          map = new google.maps.Map(document.getElementById("gmap_canvas"), myOptions);

          map.setOptions({styles: styles});

          //expanded marker syntax - note text of label inside marker

          marker = new google.maps.Marker({
            animation: google.maps.Animation.DROP,
            icon: locSymbol,
            map: map,
            position: new google.maps.LatLng(<%= location.latitude %>,<%= location.longitude %>),
            label: {
                  text: "â˜…",
                  color: 'white',
                  fontFamily: 'Helvetica',
                  fontWeight: 'bold'
              }
          });

          //info window can be 
          
          // infowindow = new google.maps.InfoWindow({content:"<b><%= location.name %></b><br><%= location.address1 %><br><%= location.address2 %>" });

          infowindow = new google.maps.InfoWindow({content: "<table>" + infoCard.html()
          });
          google.maps.event.addListener(marker, "click", function(){
            infowindow.open(map,marker);
          });
          infowindow.open(map,marker);
        
      };
        google.maps.event.addDomListener(window, 'load', init_map);
      </script>
    </div>


  <% end %>
<% end %>